---
driver:
  name: vagrant #need vagrant 1.8.7 if error on ssh connection

provisioner:
  name: puppet_apply
  modules_path: site
  manifests_path: manifests
  manifest: site.pp
  hiera_data_path: hieradata
  hiera_data_remote_path: /etc/puppet/hieradata
  ignore_spec_fixtures: true
  puppet_environment: vagrant
  custom_facts:
    tic_db_host: localhost
    postgres_nodes: localhost
    packagecloud_master_token: <%= ENV['PACKAGECLOUD_MASTER_TOKEN'] %>
    customresourcebucket: '"[\"mytestbucket\", \"mytestprefix\"]"'
    frontend_host: 'https://the-frontend.hostname.com'
    ec2_userdata: 'AWSResourceName=InstanceA'
    master_password: mypassword
    region: 'us-east-1'
    aws_accesskey: <%= ENV['AWS_ACCESS_KEY_ID'] %>
    aws_secretkey: <%= ENV['AWS_SECRET_ACCESS_KEY'] %>

transport:
  name: sftp

platforms:
  - name: centos-7.2

verifier:
  name: serverspec
  remote_exec: false
  extra_flags: '--require spec_helper -I spec/acceptance'

suites:
  - name: role-frontend
    provisioner:
      custom_facts:
        puppet_role: frontend
    verifier:
      patterns:
        - 'spec/acceptance/frontend_spec.rb'
  - name: role-tic_services_internal
    provisioner:
      custom_facts:
        puppet_role: tic_services_internal
    verifier:
      patterns:
        - 'spec/acceptance/tic_services_internal_spec.rb'
  - name: role-tic_services_external
    provisioner:
      custom_facts:
        puppet_role: tic_services_external
    verifier:
      patterns:
        - 'spec/acceptance/tic_services_external_spec.rb'
  - name: role-activemq
    provisioner:
      custom_facts:
        puppet_role: activemq
    verifier:
      patterns:
        - 'spec/acceptance/activemq_spec.rb'
  - name: role-elasticsearch
    driver:
      vagrantfiles:
        - vagrant/second_disk.rb
    provisioner:
      custom_facts:
        puppet_role: elasticsearch
        storage_device: /dev/sdb
    verifier:
      patterns:
        - 'spec/acceptance/elasticsearch_spec.rb'
  - name: role-nexus
    driver:
      vagrantfiles:
        - vagrant/second_disk.rb
    provisioner:
      custom_facts:
        puppet_role: nexus
        cfn_resource_name: InstanceA
        storage_device: /dev/sdb
    verifier:
      patterns:
        - 'spec/acceptance/nexus_spec.rb'
  - name: role-syncope
    provisioner:
      custom_facts:
        puppet_role: syncope
    verifier:
      patterns:
        - 'spec/acceptance/syncope_spec.rb'
  - name: role-dataprep_dataset
    provisioner:
      custom_facts:
        puppet_role: dataprep_dataset
    verifier:
      patterns:
        - 'spec/acceptance/dataprep_dataset_spec.rb'
  - name: role-zookeeper
    provisioner:
      custom_facts:
        puppet_role: zookeeper
    verifier:
      patterns:
        - 'spec/acceptance/zookeeper_spec.rb'
  - name: role-mongodb
    driver:
      vagrantfiles:
        - vagrant/second_disk.rb
    provisioner:
      custom_pre_install_command: |
        sudo /usr/sbin/mkfs.xfs /dev/sdb
        sudo /usr/bin/mount /dev/sdb /mnt
        sudo /usr/bin/touch /mnt/mongod.lock
        sudo /usr/bin/chown root:root /mnt/mongod.lock
        sudo /usr/bin/umount /mnt
      custom_facts:
        puppet_role: mongodb
        cfn_resource_name: InstanceA
        storage_device: /dev/sdb
        mongo_replset_auth_enable: true
    verifier:
      patterns:
        - 'spec/acceptance/mongodb_spec.rb'
  - name: role-test
    provisioner:
      custom_facts:
        puppet_role: test
        services_internal_host: "http://infra-host.com"
        nexus_host: "http://nexus-host.com"
    verifier:
      patterns:
        - 'spec/acceptance/test_spec.rb'
  - name: role-influxdb
    driver:
      vagrantfiles:
        - vagrant/second_disk.rb
    provisioner:
      custom_facts:
        puppet_role: influxdb
        storage_device: /dev/sdb
    verifier:
      patterns:
        - 'spec/acceptance/influxdb_spec.rb'
  - name: role-kafka
    driver:
      vagrantfiles:
        - vagrant/second_disk.rb
    provisioner:
      manifests_path: examples
      manifest: kafka.pp
      custom_facts:
        puppet_role: kafka
        storage_device: /dev/sdb
        topics_replication_factor: 1
        topics_partitions: 6
        topics_max_size_bytes: -1
        topics_max_age_ms: 86400000
    verifier:
      patterns:
        - 'spec/acceptance/kafka_spec.rb'
  - name: role-management_proxy
    driver:
      vagrantfiles:
        - vagrant/second_disk.rb
    provisioner:
      manifests_path: examples
      manifest: management_proxy.pp
      custom_facts:
        puppet_role: management_proxy
        elasticsearch_sys: localhost:9200
        storage_device: /dev/sdb
    verifier:
      patterns:
        - 'spec/acceptance/management_proxy_spec.rb'
  - name: role-ecs
    driver:
      vagrantfiles:
        - vagrant/second_disk.rb
    provisioner:
      custom_facts:
        puppet_role: ecs
        storage_device: /dev/sdb
    verifier:
      patterns:
        - 'spec/acceptance/ecs_spec.rb'
  - name: ami-ecs
    driver:
      vagrantfiles:
        - vagrant/second_disk.rb
    provisioner:
      puppet_environment: ami
      custom_facts:
        puppet_role: ecs
        storage_device: /dev/sdb
    verifier:
      patterns:
        - 'spec/acceptance/ami_ecs_spec.rb'
